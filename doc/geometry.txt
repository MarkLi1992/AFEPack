应Wang Han的要求，写一些解释AFEPack的基本数据结构的内容。首先，我们说
一下关于网格和几何体的数据结构。

几何体的类就是Geometry，如果需要材料标识，则叫做GeometryBM，这个名字比
较难看，是因为开始的时候没有设计好造成的。单独一个几何体中存储的数据是
没有意义的，几何体这个类的对象必须在网格类中间存储，才能够有意义。

Mesh这个类存储着各维几何体的数组。其中，最高维的几何体就是网格中间的单
元，最低维的几何体则是网格中的节点。因为使用了数组，就可以使用随机读取
方式来取其中的元素，因此，在AFEPack内部的设计语言中，每个几何体的表述
方法，都是按照“第n维的第m个几何体”这样的方式来叙述的。

在Geometry中，于是就使用存储序号的方式进行相互引用。Geometry中有两个数
组，一个存储它的顶点的序号，一个存储它的拓扑边界几何体的序号。

几何体的顶点是网格中的节点，我们称为“第0维几何体”。而对于一个“第m维
几何体”来说，它的拓扑边界几何体是“第m-1维的几何体”。每个几何体总是
往低维进行索引，从而获得关于其自身结构的所有信息。

于是，对于一个给定的网格类的对象 a_mesh，为了得到某一个维数(比如第k维)
的几何体的个数，我们可以使用

    u_int n = a_mesh.n_geometry(k);

得到。而为了得到第k维的第l个几何体，则可以使用

    GeometryBM& geo = a_mesh.geometry(k, l);

这样，我们获得了一个几何体的对象，然后就可以知道它的顶点和拓扑边界的序
号，就可以继续往低维进行索引了，比如我们取出上面得到的这个几何体geo自
己的边界，可以使用如下的代码：

    u_int n_bnd = geo.n_boundary(); /// geo 的拓扑边界几何体的个数
    for (u_int i = 0;i < n_bnd;i ++) { /// 进行遍历
      u_int bnd_idx = geo.boundary(i); /// 第i个边界几何体的序号
      GeometryBM& bnd_geo = a_mesh.geometry(k-1, bnd_idx); /// 取出来
      ... ...
    }

网格类有两个模板参数，一个是DIM，一个是DOW。其中DIM是网格所在的区域，
作为一个流形的维数。比如平面上的一个多边形，是二维的，球面也是二维的。
这个数决定了Mesh类中间，用来存储各维几何体的数组的数组的大小，事实上这
是一个 DIM+1 个元素的数组，分别存储第 0 维一直到第 DIM 维的几何体。

另外一个模板参数DOW是Dimension Of World的缩写，标识的是网格所在的流形
所在的欧式空间的维数。比如平面上的一个多边形，DOW=2，而对于球面，则
DOW=3。

不知你注意到没有，我们事实上到现在为止还没有说网格中的点的坐标呢！DOW
事实上给定的就是网格中的点的坐标的维数。在Mesh类中，存储着一个坐标的数
组，其中每个元素是一个Point<DOW>型的对象，事实上就是一个坐标而已。

对于一个“0维几何体”，它的顶点序号具有不一样的意义，事实上是说自己作
为网格中的一个节点，坐标是坐标数组中的哪一个。而“0维几何体界”的拓扑
边界是没有意义的，所以请不要使用其中的信息：那个数AFEPack不会负责维护
的！

“0维几何体”的这种特殊性，给我们的程序常常带来了一些麻烦。比如，我们
想取一个几何体 geo 的第k个顶点的坐标，需要使用下面的方式：

    u_int vtx_idx = geo.vertex(k); /// 节点几何体的序号
    GeometryBM& vtx_geo = a_mesh.geometry(0, vtx_idx); /// 取出该节点几何体
    u_int pnt_idx = vtx_geo.vertex(0); /// 取出坐标的序号
    Point<DOW>& pnt = a_mesh.point(pnt_idx); /// 取出坐标

有时候，你自己可以保证 vtx_idx 和 pnt_idx 是一样的，这样可以省下来两行，
但是库的内部并不能保证这一点。

AFEPack的内部设计语言将节点称为“0维几何体”，把线段称为“1维几何体”
等等的目标并不是想标新立异，而是为了统一，因为计算机更善于理解更加统一
的语言。而且，在这样的语言下，我们事实上可以描述任意维数的网格，对网格
中的几何体的形状也没有什么既定的要求，是一种非常灵活的描述网格的数据格
式。

一个Mesh类中的数据，如果被写到文件中，就是完全按照其在内存中的方式进行
输出的。首先输出的是坐标，然后是0维几何体，1维几何体，...，直到DIM维几
何体。
